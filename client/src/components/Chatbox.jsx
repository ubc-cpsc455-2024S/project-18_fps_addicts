import React, { useState, useEffect } from 'react';
import io from 'socket.io-client';
import ChatInput from './ChatInput.jsx';
import ChatMessages from './ChatMessages.jsx';



const socket = io('http://localhost:4000', {
    transports: ['websocket', 'polling', 'flashsocket']
});


{/* stuff marked with "chat-generated" was generated by ChatGTP on June 20st, 2024'
          The prompt used was: how to make a local chatbox in react
         modifcations were made to intergrate it to the porject, put most of the structure remains intact */}
{/* stuff marked with "chatserver-generated" was generated by ChatGTP on June 22nd, 2024'
          The prompt used was: how to make a local chatbox appear on other local intances.
         modifcations were made to intergrate it to the porject, put most of the structure remains intact */}
const ChatBox = () => {

    const [messages, setMessages] = useState([]);
    const welcomeMessage = { text: 'Welcome to the chat!', timestamp: new Date().toISOString() };

    useEffect(() => {
        // Receive initial messages from the server
        socket.emit('message', welcomeMessage);
        socket.on('init', (initialMessages) => {
            
            const parsedMessages = initialMessages.map((msg) => ({
                ...msg,
                timestamp: new Date(msg.timestamp)
            }));
            setMessages(parsedMessages);
        });

        // Receive new messages from the server
        socket.on('message', (message) => {
            const parsedMessage = {
                ...message,
                timestamp: new Date(message.timestamp)
            };
            setMessages((prevMessages) => [...prevMessages, parsedMessage]);
        });

        // Cleanup on component unmount
        return () => {
            socket.off('init');
            socket.off('message');
        };
    }, []);

    const addMessage = (message) => {
        socket.emit('message', message); // Send new message to the server
    };

    return (
        <div className="chat-box">
            <ChatMessages messages={messages} />
            <ChatInput addMessage={addMessage} />
        </div>
    );
};

export default ChatBox;